@model IPagedList<OrderDetails>

@using EC.Models;
@using PagedList;
@using PagedList.Mvc;

@{
    ViewBag.Title = "Orders";
    Layout = "~/Views/Shared/_Layout.cshtml";

     ShoppingCart cart = null;
     ShoppingCart setCart(ShoppingCart shoppingCart)
     {
            cart = shoppingCart;
        return cart;
     }

}


    





<hr />
@using (Html.BeginForm("Orders", "Store", FormMethod.Get))
{
    <input type="hidden" name="Email" value="@User.Identity.Name"/>
    @Html.TextBox("search", null,new { @class = "form-control form-control-sm mb-1", @placeholder="search by order number", @min="0", @type="number", @step="1"})
    <input type="submit" value="Search" class="btn btn-outline-secondary btn-sm text-white"/>

}
<hr />
<div class="modal rounded-sm fade" id="exampleModalScrollable" tabindex="-1" role="dialog" aria-labelledby="exampleModalScrollableTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-scrollable" role="document">
        <div class="modal-content bg-dark">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalScrollableTitle">Order</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <table class="table table-responsive table-dark table-hover">
                    <tr>
                        <td>
                            @Html.DisplayNameFor(model => model.First().ShoppingCart.CartItems)
                        </td>
                        <td>@Html.DisplayName("Quantity")</td>
                        <td>
                            @Html.DisplayName("Price")
                        </td>
                        <td>
                            @Html.DisplayName("Total")
                        </td>
                    </tr>
                    
             
                        @if (cart != null)
                        {
                            foreach (var order in cart.CartItems)
                            {
                                <tr>
                                    <td>
                                        @order.Product.ProductName
                                    </td>
                                    <td>
                                        @order.Quantity
                                    </td>
                                    <td>
                                        @order.Product.Price
                                    </td>
                                    <td>
                                        @Html.Display(order.Total.ToString())
                                    </td>
                                </tr>
                            }
                            <tr>
                                <td>
                                    @Html.DisplayName("Total")
                                </td>
                                <td colspan="3">@Html.DisplayFor(model => cart.Total)</td>
                            </tr>

                        }
                    



                </table>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>




<table class="table table-responsive table-hover table-dark">
    <tr>
        <th>@Html.DisplayNameFor(model => model.First().OrderNumber)</th>
        <th>@Html.DisplayNameFor(model => model.First().Date)</th>
    </tr>
    @foreach (var order in Model)
    {
        <tr>
            <td>@order.OrderNumber</td>
            <td>@order.Date</td>
            <td>
                <button type="button" class="btn btn-outline-secondary btn-sm text-white"   onclick="@setCart(order.ShoppingCart)" data-toggle="modal" data-target="#exampleModalScrollable">
                    Details
                </button>

            </td>
        </tr>

    }
</table>




<div>
    @Html.PagedListPager(Model, page => Url.Action("Orders", new { PageNumber = page, seach = ViewBag.Search}))
</div>