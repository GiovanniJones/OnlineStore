@model EC.Models.CartItem
@using EC.Models;
@{
    ViewBag.Title = "AddToCart";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var shoppingCart = (ShoppingCart)Session["ShoppingCart"];
}

<hr />
<h2>@Model.Product.ProductName</h2>
<hr />


<div class="card mb-3 bg-dark text-white">
    <div class="row">
        <div class="col-md-4">
            <img src="@Url.Content(Model.Product.ImagePath)" class="card-img img-fluid rounded">
        </div>
        <div class="col-md-8">
            <div class="card-body">
                <table class=" table-responsive table table-dark table-hover card-text">
                    <tbody>
                        <tr>
                            <td>Product Description</td>
                            <td scope="row"> @Model.Product.Description </td>
                        </tr>
                        <tr>
                            <td>Quantity</td>
                            <td scope="row">@Model.Product.Quantity</td>
                        </tr>
                        <tr>
                            <td>Price</td>
                            <td>@Html.DisplayFor(model => Model.Product.Price)</td>
                        </tr>
                        <tr>
                            @using (Html.BeginForm())
                            {
                                @Html.AntiForgeryToken()
                            <div class="form-row">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                @Html.HiddenFor(model => model.ProductId, new { @value=Model.ProductId})
                                <div class="form-group">
                                    <td scope="row">@Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label" }) </td>
                                    <div class="col-md-10">
                                        <td>@Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control form-control-sm", @min="1", @max = Model.Product.Quantity } })</td>
                                        @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @if (Model.Product.Quantity > 0)
                                    {
                                        <div class="col-md-offset-2 col-md-10">
                                            <input type="submit" value="Add To Cart" class="btn btn-danger" />
                                        </div>
                                    }
                                </div>
                            </div>
                            }
                        </tr>       
                    </tbody>
                </table>   
            </div>
        </div>
    </div>
</div>

<div>
    @Html.ActionLink("Back", "Index", null, new { @class="btn btn-primary"})
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
